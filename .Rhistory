devtools::install_github("KimBaldry/Reprojmap")
devtools::install_github("KimBaldry/Reprojmap")
main_dir = "C:/Users/kabaldry/OneDrive - University of Tasmania/Documents/PhD/Active Collaborations/L. Bach/Data"
MLD <- nc_open(file.path(main_dir,"Argo_mixedlayers_monthlyclim_12112019.nc"))
# print(MLD # to get the names of all the variables in the file
lonMLD <- ncvar_get(MLD,"lon") # get longitude array
latMLD <- ncvar_get(MLD,"lat") # get latitude array
ex_MLD = extent(min(lonMLD)-0.5, max(lonMLD)+0.5, min(latMLD)-0.5, max(latMLD)+0.5) #generates a spatial "extent object" for a raster (how large the grid shall be)
MLD_monthly <- ncvar_get(MLD,"mld_da_mean") # get depth array
empty_MLD_rast = raster(ex_MLD, ncol =length(lonMLD),nrow = length(latMLD), crs = "+proj=longlat +datnum=WGS84") #generate a raster. crs sets the projection that is included in the raster file.
Jan_rast = setValues(empty_MLD_rast, t(MLD_monthly[1,,length(latMLD):1])) #add values from the January mixed layer depth to the raster. The t(...) means the data is transposed because otherwise it did not fit the raster. #length(latMLD):1] reorders the latitude (reverses the order) as it wasnt right in the original grid.
Feb_rast = setValues(empty_MLD_rast, t(MLD_monthly[2,,length(latMLD):1])) #add values from the February mixed layer depth to the raster. The t(...) means the data is transposed because otherwise it did not fit the raster. #length(latMLD):1] reorders the latitude (reverses the order) as it wasnt right in the original grid.
Dec_rast = setValues(empty_MLD_rast, t(MLD_monthly[12,,length(latMLD):1]))#add values from the December mixed layer depth to the raster. The t(...) means the data is transposed because otherwise it did not fit the raster. #length(latMLD):1] reorders the latitude (reverses the order) as it wasnt right in the original grid.
summer_MLD_rast = mean(Jan_rast, Feb_rast, Dec_rast,na.rm = TRUE) #make the mean values for the whole summer season.
# the plotting
# In order to plot a circular plot you need to reproject onto a circular system.
# geom_tile is good - but it is slow. Geom_raster is quicker
# rather than reprojecting with ggplot, we just work with reprojected data
# to make a circular plot, we use a function to create a border, and a set of polygons
# we first need a plot extent
# our clip latitude is 60 degrees S
clip_lat = -60
extent_p = data.frame("x"=c(0,90,180,-90), "y" = rep(clip_lat,4))
coordinates(extent_p) <- ~x+y
projection(extent_p) <- "+proj=longlat +datum=WGS84"
plot_extent = extent(extent_p)
# we need a projection to get to
SO_proj = "+proj=laea +lat_0=-90 +lon_0=147 +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"
library(devtools)
library(ggplot2)
library(ncdf4)
library(raster)
library(Reprojmap)
main_dir = "C:/Users/kabaldry/OneDrive - University of Tasmania/Documents/PhD/Active Collaborations/L. Bach/Data"
MLD <- nc_open(file.path(main_dir,"Argo_mixedlayers_monthlyclim_12112019.nc"))
# print(MLD # to get the names of all the variables in the file
lonMLD <- ncvar_get(MLD,"lon") # get longitude array
latMLD <- ncvar_get(MLD,"lat") # get latitude array
ex_MLD = extent(min(lonMLD)-0.5, max(lonMLD)+0.5, min(latMLD)-0.5, max(latMLD)+0.5) #generates a spatial "extent object" for a raster (how large the grid shall be)
MLD_monthly <- ncvar_get(MLD,"mld_da_mean") # get depth array
empty_MLD_rast = raster(ex_MLD, ncol =length(lonMLD),nrow = length(latMLD), crs = "+proj=longlat +datnum=WGS84") #generate a raster. crs sets the projection that is included in the raster file.
Jan_rast = setValues(empty_MLD_rast, t(MLD_monthly[1,,length(latMLD):1])) #add values from the January mixed layer depth to the raster. The t(...) means the data is transposed because otherwise it did not fit the raster. #length(latMLD):1] reorders the latitude (reverses the order) as it wasnt right in the original grid.
Feb_rast = setValues(empty_MLD_rast, t(MLD_monthly[2,,length(latMLD):1])) #add values from the February mixed layer depth to the raster. The t(...) means the data is transposed because otherwise it did not fit the raster. #length(latMLD):1] reorders the latitude (reverses the order) as it wasnt right in the original grid.
Dec_rast = setValues(empty_MLD_rast, t(MLD_monthly[12,,length(latMLD):1]))#add values from the December mixed layer depth to the raster. The t(...) means the data is transposed because otherwise it did not fit the raster. #length(latMLD):1] reorders the latitude (reverses the order) as it wasnt right in the original grid.
summer_MLD_rast = mean(Jan_rast, Feb_rast, Dec_rast,na.rm = TRUE) #make the mean values for the whole summer season.
# the plotting
# In order to plot a circular plot you need to reproject onto a circular system.
# geom_tile is good - but it is slow. Geom_raster is quicker
# rather than reprojecting with ggplot, we just work with reprojected data
# to make a circular plot, we use a function to create a border, and a set of polygons
# we first need a plot extent
# our clip latitude is 60 degrees S
clip_lat = -60
extent_p = data.frame("x"=c(0,90,180,-90), "y" = rep(clip_lat,4))
coordinates(extent_p) <- ~x+y
projection(extent_p) <- "+proj=longlat +datum=WGS84"
plot_extent = extent(extent_p)
# we need a projection to get to
SO_proj = "+proj=laea +lat_0=-90 +lon_0=147 +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"
# now we can create the baseplot data
coast_plot_data = map_plot_proj(extent = plot_extent, proj_str = SO_proj, circle = T, resolution = 0.5)
library(rgeos)
document()
